<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="four_wheel_robot">

  <!-- Material definitions -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="orange">
    <color rgba="1 0.3 0.1 1"/>
  </material>
  <material name="blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="silver">
    <color rgba="0.8 0.8 0.8 1"/>
  </material>
  <material name="chrome">
    <color rgba="0.9 0.9 0.9 1"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>

  <!-- Body dimensions -->
  <xacro:property name="body_link_x_dim" value="1"/>
  <xacro:property name="body_link_y_dim" value="0.6"/>
  <xacro:property name="body_link_z_dim" value="0.3"/>

  <!-- Wheel dimensions -->
  <xacro:property name="wheel_link_radius" value="0.15"/>
  <xacro:property name="wheel_link_length" value="0.1"/>
  <xacro:property name="wheel_link_z_location" value="-0.1"/>

  <!-- Sensor dimensions -->
  <xacro:property name="sensor_side" value="0.05"/>
  <xacro:property name="lidar_radius" value="0.03"/>
  <xacro:property name="lidar_height" value="0.05"/>

  <!-- Material density -->
  <xacro:property name="body_density" value="2710.0"/>
  <xacro:property name="wheel_density" value="2710.0"/>

  <!-- PI Constant -->
  <xacro:property name="pi_const" value="3.14159265"/>

  <!-- Robot body and wheel mass -->
  <xacro:property name="sensor_mass" value="0.5"/>
  <xacro:property name="body_mass" value="${body_density * body_link_x_dim * body_link_y_dim * body_link_z_dim}"/>
  <xacro:property name="wheel_mass" value="${wheel_density * pi_const * wheel_link_radius * wheel_link_radius * wheel_link_length}"/>

  <!-- Moments of inertia of the wheel -->
  <xacro:property name="Iz_wheel" value="${0.5 * wheel_mass * wheel_link_radius * wheel_link_radius}"/>
  <xacro:property name="I_wheel" value="${(1.0/12.0) * wheel_mass * (3.0 * wheel_link_radius * wheel_link_radius + wheel_link_length * wheel_link_length)}"/>

  <!-- Dummy link -->
  <link name="base_link"/>

  <!-- Body link -->
  <link name="body_link">
    <visual>
      <geometry>
        <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}"/>
      </geometry>
      <origin rpy="0 0 ${pi}" xyz="0 0 0"/>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}"/>
      </geometry>
      <origin rpy="0 0 ${pi}" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 ${pi}" xyz="0 0 0"/>
      <mass value="${body_mass}"/>
      <inertia ixx="${(1.0/12.0)*body_mass*(body_link_y_dim*body_link_y_dim + body_link_z_dim*body_link_z_dim)}" ixy="0" ixz="0" iyy="${(1.0/12.0)*body_mass*(body_link_x_dim*body_link_x_dim + body_link_z_dim*body_link_z_dim)}" iyz="0" izz="${(1.0/12.0)*body_mass*(body_link_y_dim*body_link_y_dim + body_link_x_dim*body_link_x_dim)}"/>
    </inertial>
  </link>
  <gazebo reference="body_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <!-- Fixed joint between dummy and body -->
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="body_link"/>
    <origin xyz="0 0 0.25"/>
  </joint>

  <!-- Wheel macro -->
  <xacro:macro name="wheel" params="name x y z joint_type rpy axis">
    <link name="${name}">
      <visual>
        <geometry>
          <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <material name="black"/>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia ixx="${I_wheel}" ixy="0" ixz="0" iyy="${I_wheel}" iyz="0" izz="${Iz_wheel}"/>
      </inertial>
    </link>
    <gazebo reference="${name}">
      <mu1>0.2</mu1>
      <mu2>0.2</mu2>
      <material>Gazebo/Black</material>
    </gazebo>
    <joint name="${name}_joint" type="${joint_type}">
      <parent link="body_link"/>
      <child link="${name}"/>
      <origin xyz="${x} ${y} ${z}" rpy="${rpy}"/>
      <axis xyz="${axis}"/>
      <limit effort="1000" velocity="1000"/>
      <dynamics damping="1.0" friction="1.0"/>
    </joint>
  </xacro:macro>

  <!-- Instantiate wheels -->
  <xacro:wheel name="rear_right_wheel" x="${-body_link_x_dim/2 + 1.2*wheel_link_radius}" y="${-body_link_y_dim/2 - 1.2*wheel_link_length/2}" z="${wheel_link_z_location}" rpy="${pi/2} 0 0" axis="0 0 -1" joint_type="continuous"/>
  <xacro:wheel name="rear_left_wheel" x="${-body_link_x_dim/2 + 1.2*wheel_link_radius}" y="${body_link_y_dim/2 + 1.2*wheel_link_length/2}" z="${wheel_link_z_location}" rpy="-${pi/2} 0 0" axis="0 0 1" joint_type="continuous"/>
  <xacro:wheel name="front_right_wheel" x="${body_link_x_dim/2 - 1.2*wheel_link_radius}" y="${-body_link_y_dim/2 - 1.2*wheel_link_length/2}" z="${wheel_link_z_location}" rpy="${pi/2} 0 0" axis="0 0 -1" joint_type="continuous"/>
  <xacro:wheel name="front_left_wheel" x="${body_link_x_dim/2 - 1.2*wheel_link_radius}" y="${body_link_y_dim/2 + 1.2*wheel_link_length/2}" z="${wheel_link_z_location}" rpy="-${pi/2} 0 0" axis="0 0 1" joint_type="continuous"/>

  <!-- Camera -->
  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <cylinder radius="${sensor_side/4}" length="${sensor_side}"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <visual>
      <geometry>
        <box size="${sensor_side} ${sensor_side} ${sensor_side}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${sensor_side}"/>
      <material name="silver"/>
    </visual>
    <collision>
      <geometry>
        <box size="${sensor_side} ${sensor_side} ${sensor_side}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="${sensor_mass}"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
  </link>
  <gazebo reference="camera_link">
    <material>Gazebo/Silver</material>
    <sensor name="camera" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <frameName>camera_link_optical</frameName>
        <topicName>sensor/camera</topicName>
        <cameraName>camera</cameraName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Sonar -->
  <link name="sonar_link">
    <visual>
      <geometry>
        <box size="${sensor_side} ${2*sensor_side} ${sensor_side}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${sensor_side/2}"/>
      <material name="red"/>
    </visual>
    <visual>
      <geometry>
        <box size="${sensor_side/2} ${sensor_side/2} ${sensor_side}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <box size="${sensor_side} ${sensor_side} ${sensor_side}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="${sensor_mass}"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
  </link>
  <gazebo reference="sonar_link">
    <material>Gazebo/Red</material>
    <sensor type="ray" name="sonar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.01</min_angle>
            <max_angle>0.01</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.01</min_angle>
            <max_angle>0.01</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>5</max>
          <resolution>0.02</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_range" filename="libgazebo_ros_range.so">
        <topicName>sensor/sonar</topicName>
        <frameName>sonar_link</frameName>
        <alwaysOn>true</alwaysOn>
        <updateRate>50</updateRate>
        <gaussianNoise>0.005</gaussianNoise>
        <radiation>ULTRASOUND</radiation>
        <fov>1.0</fov>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Lidar -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="chrome"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="${sensor_mass}"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
  </link>
  <gazebo reference="lidar_link">
    <material>Gazebo/Chrome</material>
    <sensor name="lidar" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>12</max>
        </range>
      </ray>
      <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frameName>laser_frame</frameName>
        <topicName>sensor/lidar</topicName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="lidar_joint" type="fixed">
    <parent link="body_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${body_link_z_dim/2 + lidar_height/2}"/>
    <axis xyz="0 1 0"/>
  </joint>

</robot>